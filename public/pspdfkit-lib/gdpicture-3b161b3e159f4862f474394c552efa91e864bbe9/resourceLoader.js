let require;export async function initialize(){if(null!=globalThis.process?.versions?.node){const{createRequire:e}=await import("module");require=e(import.meta.url)}}export function fetchResource(e,r){try{if(null!=globalThis.process?.versions?.node){const o=require("fs"),t=require("path"),s=`${globalThis.gdPicture.baseUrl}/resources/${e}`,i=o.readFileSync(t.normalize(s));globalThis.gdPicture.module.FS.writeFile(`/resources/${r}`,new Uint8Array(i))}else{const o=`${globalThis.gdPicture.baseUrl}/resources/${e}`,t=new XMLHttpRequest;t.open("GET",o,!1),t.overrideMimeType("text/plain; charset=x-user-defined"),t.send(),200===t.status?globalThis.gdPicture.module.FS.writeFile(`/resources/${r}`,stringToArrayBuffer(t.response)):console.error(`Could not retrieve resource. Status: ${t.status}`)}}catch(e){console.error(`Could not retrieve resource. Exception: ${e}`)}}function stringToArrayBuffer(e){const r=new ArrayBuffer(e.length),o=new Uint8Array(r);for(let r=0,t=e.length;r<t;r++)o[r]=e.charCodeAt(r);return o}